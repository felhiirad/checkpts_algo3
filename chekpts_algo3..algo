PROCEDURE dot_product(vect1,vect2 : ARRAY_OF INTEGER, VAR dot : INTEGER)
VAR
    i : INTEGER;
BEGIN
    dot :=0;
    i:=0;
    IF (vect1.length <> vect2.length) THEN
       RETURN Write("impossible de calculer les produit car non pas le meme taille");
     ELSE
    WHILE (i <vect1.length ) DO
        dot := vect1[i]*vect2[i];
        i:=i+1;
    END_WHILE
    END_IF
END
// determiner la size du vecteure
FUNCTION read_size( n:INTEGER ) : INTEGER


BEGIN
    REPEAT
     Write("donner la taille de la vecteure");
     Read(n)
    UNTIL (n < 50 AND n > 0 );
    RETURN n ;
END
// read element of vect
PROCEDURE read_array(var n :INTEGER, var vect: ARRAY_OF INTEGER )

BEGIN
    FOR i FROM 0 TO n-1 STEP 1  DO
        Write("donner les element des vect");
        Read(vect[i]);
    END_FOR
END
// 2) 
ALGORITHM orth_vectors
VAR
    vect1,vect2 : ARRAY_OF INTEGER [50];
    dot : INTEGER;
BEGIN
    // Read Size of elements of Vect1 
    n1 := read_size();
    // Read elements of Vect1
    read_array(n1,vect1);
    // Read Size of elements of Vect2 
    n2 := read_size();
    // Read elements of Vect2
    read_array(n2,vect2);
    dot_product(vect1,vect2,dot);
    IF (dot = 0) THEN
        Write("Vect1 and Vect2 are orthogonal");
    ELSE
        Write("Vect1 and Vect2 are not orthogonal");
    END_IF
END

// 3eme question:use function instead of procedure

FUNCTION dot_product(vect1,vect2 : ARRAY_OF INTEGER) : INTEGER
VAR
    i, dot : INTEGER;
    
BEGIN
    dot :=0;
    i:=0;
    IF (vect1.length <> vect2.length) THEN
      RETURN  Write("les vecteurs en taille deff en ne peut pas faire le produit scalaire");
         
    ELSE
    WHILE (i <vect1.length ) DO
        dot := vect1[i]*vect2[i];
        i:=i+1;
    END_WHILE
    RETURN dot ;
END

ALGORITHM orth_vectors
VAR
    vect1,vect2 : ARRAY_OF INTEGER [50];
    dot : INTEGER;
BEGIN
    // Read Size of elements of Vect1 
    n1 := read_size();
    // Read elements of Vect1
    read_array(n1,vect1);
    // Read Size of elements of Vect2 
    n2 := read_size();
    // Read elements of Vect2
    read_array(n2,vect2);
    dot := dot_product(vect1,vect2);
    IF (dot = 0) THEN
        Write("Vect1 and Vect2 are orthogonal");
    ELSE
        Write("Vect1 and Vect2 are not orthogonal");
    END_IF
END